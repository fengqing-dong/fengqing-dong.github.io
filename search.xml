<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[pic2]]></title>
    <url>%2F2018%2F12%2F12%2Fpic2%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo 使用说明]]></title>
    <url>%2F2018%2F12%2F11%2FHexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[hexoconfiguration（配置）配置文件存放在根目录下的_config.yml文件中，用于控制博客的全局配置。 site部分该部分主要设置网页主页的描述信息等，可根据个人网站信息修改 URL部分其中permalink参数设置所有部署网页的链接形式，其他参数一般没有必要修改例如下表，permalink设置如左边，网页显示的链接为右边形式 Setting Result :year/:month/:day/:title/ 2013/07/14/hello-world :year-:month-:day-:title.html 2013-07-14-hello-world.html :category/:title foo/bar/hello-world 详细permalink内容见网页Permalinks 注意： 在_config.yml中设置该参数会使所有的网页都呈现以上形式，而在每个MD文件的front-matter中设置该参数即为该篇文章生成一个单独的链接 front-matter front-matter 即每个MD文件中起始描述部分，可是设置每个文章的详细信息，如title，categories，tags，permalink，date，updated，comments等信息 title 设置blog（文章）标题 date 设置blog的建立时间 updated 设置blog的更新时间 categories 设置文章的分类，可以使用多级分类，形式如下： 123categories: (这里有空格)- 目录一- 目录二 tags 设置文章的标签，可以设置多个，设置方法有如下两种： 1234567方法1tags: - 标签1- 标签2方法二tags: [标签1，标签2] 在主页中添加自定义页面例如像添加“读书”页面 1hexo new page &quot;读书&quot; 此时会在hexo &gt; source文件夹中会生成一个读书的文件夹。修改文件夹下index.md文件,内容如下：123456---title: 读书date: 2018-12-11 15:34:55type: &quot;读书&quot;comments: false # 当需要关闭评论时，添加comments并将值设置为false--- 然后编辑主题的_config.yml，在menu中的添加读书: /读书。注意是在当前使用的主题，假如用的是Next，则修改./themes/next/_config.yml。最终内容如下:123456789101112menu: home: / # 在菜单上显示首页 archives: /archives # 在菜单删显示全部 categories: /categories # 在菜单上显示 分类 tags: /tags # 在菜单上显示 标签 读书: /读书 about: /about # 在菜单上显示 关于 以上位置，表示最终blog中各个页面的位置，可以根据需要调整。 相关网址github blog搭建教程图标网址]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F12%2F11%2FNotes%20Of%20Linux%2F</url>
    <content type="text"><![CDATA[第一部分：Linux学习笔记 ++==格式示例👇👇👇==++ 书名、教程名一、第一章(一) 部分内容++==格式示例👆👆👆==++ 第二部分：Linux知识点 ++==格式示例👇👇👇==++ 1. Title (五级标题H5)a. subtitle (六级标题H6,如果有必要) 字符串 新建变量时不用$符号，但是在调用变量的时候需要$。（变量的调用与perl语言相似） contents (内容，行前加Tab设置关键字) contents(内容，行前加Tab设置关键字) ++==格式示例👆👆👆==++ 1. apt-get 与 yum的区别linux系统基本上分两大类： 1. RedHat系列：Redhat、Centos、Fedora等 2. Debian系列：Debian、Ubuntu等 安装包格式： 1. rpm包,安装rpm包的命令是“rpm -参数”2 包管理工具yum 2. deb包,安装deb包的命令是“dpkg -参数”2 包管理工具apt-get 另外，apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。 2. shell使用注意事项1. #!\bin\bash 告诉系统其后路径所指定的程序即是解释此脚本文件的 Shell 程序。 2. 执行shell脚本 要用 ./test.sh 告诉系统说，就在当前目录找。直接写成test.sh，linux会在系统的PATH中查找test.sh文 而并非是需要执行文件。 3.运行方式有两种： a. ./test.sh #执行脚本(脚本第一行为#!\bin\bash) b. /bin/sh test.sh 3. shell基础 字符串 新建变量时不用$符号，但是在调用变量的时候需要$。（变量的调用与perl语言相似） 数组 数组名=(值1 值2 ... 值n)； 读取数组元素值 ${数组名[下标]} 注释 以&quot;#&quot;开头的行就是注释，会被解释器忽略 传参 执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。 n 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二个参数，以此类推…… 基本运算 原生bash不支持简单的数学运算，但是可以通过其他命令来实现，如awk 和 expr，expr 最常用 &quot;例子&quot; val=expr 2 + 2 &quot;注意&quot; 1. 表达式和运算符之间要有空格，例如 2+2 是不对的，必须写成 2 + 2; 2. 完整的表达式要被 ` ` 包含 算术运算符 关系运算符 布尔运算符 逻辑运算符 字符串运算符 文件测试运算符 4. shell命令 echo echo -e 开启转义，字符串中支持正则 \c 不换行]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
