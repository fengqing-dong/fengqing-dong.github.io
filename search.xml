<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[参考基因组---RNA-SEQ实战(一)]]></title>
    <url>%2F2019%2F04%2F28%2F%E5%8F%82%E8%80%83%E5%9F%BA%E5%9B%A0%E7%BB%84-RNA-SEQ%E5%AE%9E%E6%88%981%2F</url>
    <content type="text"><![CDATA[在学习进行人的RNA-SEQ数据分析之前，需要做许多准备工作： 分析环境的搭建以及各个分析软件的安装； 参考基因组的选择； 待分析数据准备； 分析流程 本文章主要介绍参考基因组选择、不同数据中参考基因下组载，以及参考基因组格式说明。 参考基因组及注释文件 参考基因组文件 通常是fasta或者fasta格式：以&gt;开头的行标注染色体信息，后续行为该条染色体的碱基信息。 基因注释文件 通常有GTF(General Transfer Format)和GFF(general feature format)两种，其中GFF又可分为GFF3和GFF2。这些格式大同小异，主要作用就是 注释基因组 。上述基因组文件中只有每条染色体的碱基序列，并没有各个基因信息；而GTF/GFF文件中包含的是每个转录本的信息。12345678910111213# FA文件&gt;1 dna:chromosome chromosome:GRCh38:1:1:248956422:1 REFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN# GTF文件chr1 hg38_ncbiRefSeq stop_codon 67093005 67093007 0.000000 - . gene_id &quot;XM_011541469.1&quot;; transcript_id &quot;XM_011541469.1&quot;;chr1 hg38_ncbiRefSeq CDS 67093008 67093604 0.000000 - 0 gene_id &quot;XM_011541469.1&quot;; transcript_id &quot;XM_011541469.1&quot;;chr1 hg38_ncbiRefSeq exon 67092176 67093604 0.000000 - . gene_id &quot;XM_011541469.1&quot;; transcript_id &quot;XM_011541469.1&quot;;chr1 hg38_ncbiRefSeq CDS 67095235 67095421 0.000000 - 1 gene_id &quot;XM_011541469.1&quot;; transcript_id &quot;XM_011541469.1&quot;; 本流程所用参考基因组为UCSC，下载方法如下： 1234# 参考基因组文件，UCSC下载wget -c ftp://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz# -c 断点续传，避免因为网络中断导致下载失败。# GEF文件下载见下文 1 参考基因组数据来源参考基因组主要有三个数据库来源ENSEMBL、NCBI、UCSC，还有一些特定数据库。各个数据库中格式不尽相同。 1.1 ENSEMBL参考基因组ENSMBL列出了各个不同物种的参考基因组和参考转录组，以表格的样式展示，各个文件整理的非常清楚，点击即可到达FTP下载页面。 常用物种数据界面 http://asia.ensembl.org/info/data/ftp/index.htmlFTP下载网址:ftp://ftp.ensembl.org/pub Ensembl提供的参考基因组有2种组装形式和3种重复序列处理方式, 分别是primary, toplevel和unmasked (dna)、oft-masked (dna_sm)和masked (dna_rm)。一般选择dna.primary或dna_sm.primary为后缀的文件。各个格式的含义见下文。 12345# 参考基因组 ensemb 下载wget -c ftp://ftp.ensembl.org/pub/release-96/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz# gff文件 ensemb 下载 wget ftp://ftp.ensembl.org/pub/release-96/gtf/homo_sapiens/Homo_sapiens.GRCh38.96.gtf.gz 1.2 NCBINCBI数据库好像没有整个基因组的FA文件，只有单个染色体的。下载页面如下： ftp://ftp.ncbi.nlm.nih.gov/genomes/Homo_sapiens NCBI只有gff3格式下载 1wget ftp://ftp.ncbi.nlm.nih.gov/genomes/Homo_sapiens/GFF/ref_GRCh38.p12_top_level.gff3.gz 1.3 USUCUSUC下载参考基因组比较简单,如下：1wget -c ftp://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz USUC下载基因组注释文件比较麻烦，没有直接的FTP下载链接,有两种方式可以下载 第一种方法,界面版 这种方式得到的GTF文件只有gene_id和transcript_id，而没有其他信息,如:基因名，外显子。首先，需要先进入http://genome.ucsc.edu/cgi-bin/hgTables然后进行选择，最后点击get output即可下载。具体参数如下：clade: Mammalgenome: humanassembly: Dec. 2013 (GRCh38/hg38)group: Genes and Gene Predictionstrack: NCBI RefSeqtable: UCSC RefSeq (refGene)或者RefSeq All (ncbiRefSeq)当table种选择UCSC RefSeq (refGene)时与第二种方式基本得到GTF文件基本相似。但是这种方式得到的GTF文件最后一列只有gene_id和transcript_id，而没有其他信息,如:基因名，外显子。而第二张方式的信息比较全面。 NCBI中提供各个gene_id或transcript_id的详细信息文件，下载后然后手动匹配。 1wget ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/gene2refseq.gz 第二种方式，FTP下载 USUC提供一种非冗余的格式GenePred table format，文件较小，但是需要用genePredToGtf工具转换。GenePred 格式说明参见下面： https://genome.ucsc.edu/FAQ/FAQformat.html#format9http://genomewiki.ucsc.edu/index.php/Genes_in_gtf_or_gff_format 123456789# 下载转换工具wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64.v369/genePredToGtf#下载GenePred并转换wget http://hgdownload.soe.ucsc.edu/goldenPath/hg38/database/refGene.txt.gzgzip -d refGene.txt.gzcut -f 2- refGene.txt &gt; refGene.input./genePredToGtf file refGene.input hg38refGene.gtfcat hg38refGene.gtf | sort -k1,1 -k4,4n &gt; hg38refGene.gtf.sorted 1.4 illumina给的参考基因组illumina官网也给了参考基因组的相关文件。 https://support.illumina.com/sequencing/sequencing_software/igenome.html 1.5 ENSEMBL、NCBI、UCSC参考基因组版本对应关系NCBI UCSC ENSEMBL GRCh36 hg18 release_52. GRCh37 hg19 release_59/61/64/68/69/75. GRCh38 hg38 release_76/77/78/80/81/82. 2. 参考基因组格式说明FA 基因序列GTF 基因组注释,详细说明见GTF文件 或者USUC对各种格式说明GFF/GFF3 基因组注释，与GTF类似 2.1 参考基因组后缀说明Primary or Toplevel 参考基因组优先选择的primary版本，因为toplevel版本会包含haplotype信息，多余的信息会增加比对工具的工作，选择primary就可以 Primary assembly contains all toplevel sequence regions excluding haplotypes and patches. This file is best used for performing sequence similarity searches where patch and haplotype sequences would confuse analysis. unmasked (dna)、soft-masked (dna_sm)和masked (dna_rm，Repeats masked) Masked基因组是指所有重复区和低复杂区被N代替的基因组序列，比对时就不会有reads比对到这些区域。一般不推荐用masked的基因组，因为它造成了信息的丢失，由此带来的一个问题是uniquely比对到masked基因组上的reads实际上可能不是unique的。而且masked基因组还会带来比对错误，使得在允许错配的情况下，本来来自重复区的reads比对到基因组的其它位置。另外检测重复区和低复杂区的软件不可能是完美的，这就造成遮盖住的重复序列和低复杂区并不一定是100%准确和敏感的。在NGS处理过程中，避免使用masked (dna_rm) soft-masked基因组是指把所有重复区和低复杂区的序列用小写字母标出的基因组，由于主要的比对软件，比如BWA、bowtie2等都忽略这些soft-mask，直接把小写字母当做大写字母比对，所以使用soft-masked基因组的比对效果和使用unmasked基因组的比对效果是相同的。 当软件不识别大小写时，unmasked等同于soft-masked 2.2 gff/gtf格式GFF31234567891011121314一个物种的基因组测序完成后，需要对这些数据进行解读，首先要先找到这些序列中转录起始位点、基因、外显子、内含子等组成元件在染色体中的位置信息(即注释)后才能再进行深入的分析。gff/gtf是贮存这些注释信息的两种文件格式。GFF(general feature format)：这种格式主要是用来注释基因组。 现大部分利用的是第三版，即gff3。GTF(gene transfer format)：主要是用来对基因进行注释。当前所广泛使用的gtf格式为第二版，即gtf 。##### GFF3GFF3允许使用#作为注释符号 ，除去注释外，主体部分共有9列。 GFF3中每一列的含义：seqid source type start end score strand strand attributes1. seqid ：序列的id。(The name of the sequence where the feature is located.)2. source：注释的来源，一般指明产生此gff3文件的软件或方法(e.g. Augustus or RepeatMasker)。如果未知，则用点（.）代替。3. type： 类型，此处不受约束，但为下游分析方便，建议使用gene，repeat_region，exon，CDS，或SO对应编号等。4. start：起始位置，从1开始计数（区别于bed文件从0开始计数）。5. end：终止位置。6. score：得分，注释信息可能性说明，可以是序列相似性比对时的E-values值或者基因预测是的P-values值。”.”表示为空。(indicates the confidence of the source on the annotated feature)7. strand：“＋”表示正链，“－”表示负链，“.”表示不需要指定正负链，“?” 表示未知. 8. phase ：步进。仅对编码蛋白质的CDS有效，本列指定下一个密码子开始的位置。可以是0、1或2，表示到达下一个密码子需要跳过碱基个数。9. attributes：属性。一个包含众多属性的列表，格式为“标签＝值”（tag=value），不同属性之间以分号相隔。 GTF gtf文件也是由9列组成,其中每一列含义：seqname source，feature，start，end，score，strand，frame，attributes 第9列必须以gene_id以及transcript_id开头12345678910111. seqname: 序列的名字。通常格式染色体ID或是contig ID。2. source：注释的来源。通常是预测软件名或是公共数据库。3. start：起始位置，从1开始计数。4. end：终止位置。5. feature ：基因结构.根据所使用软件不同，feature types必须注明。CDS，start_codon，stop_codon是一定要含有的类型。6. score ：这一列的值表示对该类型存在性和其坐标的可信度，不是必须的，可以用点“.”代替。7. strand：链的正向与负向，分别用加号+和减号-表示。8. frame：密码子偏移，可以是0、1或2。9. attributes：必须要有以下两个值： gene_id value: 表示转录本在基因组上的基因座的唯一的ID。gene_id与value值用空格分开，如果值为空，则表示没有对应的基因。 transcript_id value: 预测的转录本的唯一ID。transcript_id与value值用空格分开，空表示没有转录本。 2.3 两种文件的差异比较 2.4 两种文件格式之间的转换直接使用Cufflinks里面的工具gffread1234#gff2gtfgffread my.gff3 -T -o my.gtf#gtf2gffgffread merged.gtf -o- &gt; merged.gff3 参考来源 基因组各种版本对应关系 NGS基础 - 参考基因组和基因注释文件 gff/gtf格式 从UCSC下载基因组的GTF文件]]></content>
      <categories>
        <category>生信</category>
        <category>RNA-SEQ</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>RNA-SEQ</tag>
        <tag>NGS</tag>
        <tag>参考基因组</tag>
        <tag>GFF/GTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建个人博客设置说明(一)]]></title>
    <url>%2F2019%2F03%2F07%2FHexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[利用hexo+GitHub搭建个人博客，并基于NEXT主题，设置个性博客页面。 configuration（配置）配置文件存放在根目录下的_config.yml文件中，用于控制博客的全局配置。 site部分该部分主要设置网页主页的描述信息等，可根据个人网站信息修改 URL部分其中permalink参数设置所有部署网页的链接形式，其他参数一般没有必要修改例如下表，permalink设置如左边，网页显示的链接为右边形式 Setting Result :year/:month/:day/:title/ 2013/07/14/hello-world :year-:month-:day-:title.html 2013-07-14-hello-world.html :category/:title foo/bar/hello-world 详细permalink内容见网页Permalinks 注意： 在_config.yml中设置该参数会使所有的网页都呈现以上形式，而在每个MD文件的front-matter中设置该参数即为该篇文章生成一个单独的链接 front-matter含义 front-matter 即每个MD文件中起始描述部分，可是设置每个文章的详细信息，如title，categories，tags，permalink，date，updated，comments等信息 title 设置blog（文章）标题 date 设置blog的建立时间 updated 设置blog的更新时间 description 设置文章摘要信息，用于主页显示文章在主页的展示。当不设置时，主页显示文章的前几行内容。 password: 设置博文加密 top: 置顶 categories 设置文章的分类，可以使用多级分类，形式如下： 123categories: (这里有空格)- 目录一- 目录二 tags 设置文章的标签，可以设置多个，设置方法有如下两种： 1234567方法1tags: - 标签1- 标签2方法二tags: [标签1，标签2] 在主页中添加自定义页面例如，添加“读书”页面 1hexo new page &quot;读书&quot; 此时会在hexo &gt; source文件夹中会生成一个读书的文件夹。修改文件夹下index.md文件,内容如下：123456---title: 读书date: 2018-12-11 15:34:55type: &quot;读书&quot;comments: false # 当需要关闭评论时，添加comments并将值设置为false--- 然后编辑主题的_config.yml，在menu中的添加读书: /读书。注意是在当前使用的主题，假如用的是Next，则修改./themes/next/_config.yml。最终内容如下:123456789101112menu: home: / # 在菜单上显示首页 archives: /archives # 在菜单删显示全部 categories: /categories # 在菜单上显示 分类 tags: /tags # 在菜单上显示 标签 读书: /读书 about: /about # 在菜单上显示 关于 以上位置，表示最终blog中各个页面的位置，可以根据需要调整。 文章置顶在文章中设置置顶标签，并且实现文章置顶。 1.修改仓库1234$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save` 添加置顶标志 修改主题设置文件。例如使用Next主题，可打开并修改/blog/themes/next/layout/_macro目录下的post.swig文件。找到&lt;div class=&quot;post-meta&quot;&gt;标签，在其后方插入如下代码：12345&#123;% if post.top %&#125; &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&#123;% endif %&#125; 在Front-Matter中添加top标签当标签为top: true时，设置该文章置顶，多个置顶文章时，按照时间排序当标签为top: 11时，该文章也会置顶，并且会按照设置的数值进行排序，数值越打越靠前 另一种置顶设置方法，见解决Hexo博客文章置顶问题 添加背景图片 下载喜欢的背景图片，放置于\source\uploads\images文件夹下，并命名backGround.jpg（名字随意取，但是需要与下面代码一致），如果没有该文件夹，请手动创建 一般建议将相关文件都放置在\source文件夹下 在\themes\next\source\css\_custom\custom.styl文件中添加以下代码1body &#123; background:url(/uploads/images/backGround.jpg);&#125; 文章加密 修改themes\next\layout\_partials\head.swig文件，在后添加以下代码： 1234567891011121314&lt;script&gt; (function () &#123; if (&apos;&#123;&#123; page.password &#125;&#125;&apos;) &#123; if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;) &#123; // 这里可以自定义 alert(&apos;密码错误！&apos;); // 这里可以自定义 if (history.length === 2) &#123; location.replace(&quot;https://xxxxxxxxxxxxxxxxxxxxxx/&quot;); // 这里替换成你的首页 &#125; else &#123; history.back(); &#125; &#125; &#125; &#125;)();&lt;/script&gt; 在你想要加密的文章的front-matter中添加password: （你的文章密码） 相关网址github blog搭建教程图标网址hexo博客优化之文章置顶+置顶标签Hexo-Next-主题优化打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化]]></content>
      <categories>
        <category>教程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python笔记]]></title>
    <url>%2F2019%2F01%2F31%2Fpython%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[1. 对嵌套列表中数据处理[对嵌套列表中数据处理]123456789def visit(data): for elem in data: if isinstance(elem, tuple) or isinstance(elem, list): yield from visit(elem) else: yield elem for e in visit([1, 2, (3, 4), 5]): print(e) 2. 对未知键值对创建字典在某些情况下，需要创建字典，并且字典中的键映射多个值。使用defaultdict更简洁。创建多值字典12345678910111213- 正常用法d = &#123;&#125;for key, value in pairs: if key not in d: d[key] = [] d[key].append(value)- 使用defaultdictfrom collections import defaultdictd = defaultdict(list) for key, value in pairs: d[key].append(value)]]></content>
      <categories>
        <category>python笔记</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux常用命令]]></title>
    <url>%2F2018%2F12%2F30%2Flinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1. wc统计文件中行数、字数、字节数，对于参数如下：wc -l filenamewc -w filenamewc -c filename 2. vim安装插件以vim-indent-guides为例 从github下载文件 git clone https://github.com/nathanaelkane/vim-indent-guides.git 修改.vimrc。添加行Plugin &#39;nathanaelkane/vim-indent-guides&#39; 修改配置文件。 添加以下代码 1234let g:indent_guides_enable_on_vim_startup = 1 #添加行，vim启动时启用let g:indent_guides_start_level = 1 #添加行，开始显示对齐线的缩进级别let g:indent_guides_guide_size = 1 #添加行，对齐线的宽度，（1字符）let g:indent_guides_tab_guides = 0 #添加行，对tab对齐的禁用 3. vim设置代码折叠可用选项`foldmethod`来设定折叠方式：`set fdm=*****`。 有 6 种方法来选定折叠：manual 手工定义折叠indent 更多的缩进表示更高级别的折叠expr 用表达式来定义折叠syntax 用语法高亮来定义折叠diff 对没有更改的文本进行折叠marker 对文中的标志折叠 如在，在.vimrc文件中添加set fdm=indent. 折叠命令：za 折叠zc 折叠zo 展开折叠zO 展开范围内全部折叠→ 展开折叠 4. vim快速查找 方法1：最快的方式是让光标停留在想要查找的单词的任意一个字母上面， 然后输入Shift + * ，即可快速选中该单词，并且可以通过 n 或 N 进行上一个或下一个的匹配。 方法2： 输入“：/word”，并且可以通过 n 或 N 进行上一个或下一个的匹配。 5. 配置自定义命令对于用户，修改~/.bashrc文件 对于所有用户，修改/etc/bashrc文件 alias new_order=&quot;替换的命令&quot; 6. git 使用 123456git initgit add &quot;filr or dir&quot;git commit -m &quot;description&quot;git remote add origin &quot;https://github.com/username/repository_name.git# 如果报错 运行git remote rm origin后，重新运行上句命令git push -u origin master 7. 查看系统 df -h # 查看系统存储信息 du -sh * #查看当前文件夹下各个子文件(夹)的大小 du -lh –max-depth=1 #查看当前文件夹下各个子文件夹的大小 8. 文件查找 grep -n “^&gt;chr[0-9XY]$” filename # 查找字符并显示所在行号 sed -n ‘100,200p’ hg38.fa # 查看文件的100-200行内容 grep ‘^chr[0-9XY]{1,2}‘$’\t’’+‘ #grep查找Tab, 需要将\t用’$’\t’’+代替，另外{}需要进行转义 grep ‘^chr[0-9XY]{1,2}‘ 与 grep -E ‘^chr[0-9XY]{1,2}’意义一致，-E表示正则模式 grep ““ -v # 显示不包含““的行 find /home -name test.py #在home目录下查找test.py locate test.py #所有目录下查找test.py 9 修改linux终端命令行各字体颜色参考链接：PS1应用之——修改linux终端命令行各字体颜色 PS1=”[\e[37;40m][[\e[32;40m]\u[\e[37;40m]@\h [\e[36;40m]\w[\e[0m]]\$ “ #临时生效 echo ‘export PS1=”[\e[37;40m][[\e[32;40m]\u[\e[37;40m]@\h [\e[36;40m]\w[\e[0m]]\$ “‘&gt;&gt; ~/.bashrc #永久生效 文件分割 split –lines=1048576 –numeric-suffixes –suffix-length=2 SRR1039510_2.fasterq temp]]></content>
  </entry>
</search>
