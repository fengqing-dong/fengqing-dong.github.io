<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python笔记]]></title>
    <url>%2F2019%2F01%2F31%2Fpython%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[1.对嵌套列表中数据处理[对嵌套列表中数据处理]123456789def visit(data): for elem in data: if isinstance(elem, tuple) or isinstance(elem, list): yield from visit(elem) else: yield elem for e in visit([1, 2, (3, 4), 5]): print(e)]]></content>
      <categories>
        <category>python笔记</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[page]]></title>
    <url>%2F2019%2F01%2F31%2Fpage%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[linux常用命令]]></title>
    <url>%2F2018%2F12%2F30%2Flinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[wc统计文件中行数、字数、字节数，对于参数如下：wc -l filenamewc -w filenamewc -c filename vim安装插件以vim-indent-guides为例 从github下载文件 git clone https://github.com/nathanaelkane/vim-indent-guides.git 修改.vimrc。添加行` Plugin ‘nathanaelkane/vim-indent-guides’ 修改配置文件。 添加以下代码1234let g:indent_guides_enable_on_vim_startup = 1 #添加行，vim启动时启用let g:indent_guides_start_level = 1 #添加行，开始显示对齐线的缩进级别let g:indent_guides_guide_size = 1 #添加行，对齐线的宽度，（1字符）let g:indent_guides_tab_guides = 0 #添加行，对tab对齐的禁用 vim设置代码折叠 可用选项 ‘foldmethod’ 来设定折叠方式：set fdm=*。有 6 种方法来选定折叠：manual 手工定义折叠indent 更多的缩进表示更高级别的折叠expr 用表达式来定义折叠syntax 用语法高亮来定义折叠diff 对没有更改的文本进行折叠marker 对文中的标志折叠 如在，在.vimrc文件中添加set fdm=indent. 折叠命令：za 折叠zc 折叠zo 展开折叠zO 展开范围内全部折叠→ 展开折叠 vim快速查找 方法1：最快的方式是让光标停留在想要查找的单词的任意一个字母上面， 然后输入Shift + * ，即可快速选中该单词，并且可以通过 n 或 N 进行上一个或下一个的匹配。 方法2： 输入“：/word”，并且可以通过 n 或 N 进行上一个或下一个的匹配。 配置自定义命令 对于用户，修改~/.bashrc文件 对于所有用户，修改/etc/bashrc文件alias new_order=&quot;替换的命令&quot; git 使用123456git initgit add &quot;filr or dir&quot;git commit -m &quot;description&quot;git remote add origin &quot;https://git@github.com/username/repository_name.git# 如果报错 运行git remote rm origin后，重新运行上句命令git push -u origin master]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建个人博客设置说明(一)]]></title>
    <url>%2F2018%2F12%2F13%2FHexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[利用hexo+GitHub搭建个人博客，并基于NEXT主题，设置个性博客页面。 configuration（配置）配置文件存放在根目录下的_config.yml文件中，用于控制博客的全局配置。 site部分该部分主要设置网页主页的描述信息等，可根据个人网站信息修改 URL部分其中permalink参数设置所有部署网页的链接形式，其他参数一般没有必要修改例如下表，permalink设置如左边，网页显示的链接为右边形式 Setting Result :year/:month/:day/:title/ 2013/07/14/hello-world :year-:month-:day-:title.html 2013-07-14-hello-world.html :category/:title foo/bar/hello-world 详细permalink内容见网页Permalinks 注意： 在_config.yml中设置该参数会使所有的网页都呈现以上形式，而在每个MD文件的front-matter中设置该参数即为该篇文章生成一个单独的链接 front-matter含义 front-matter 即每个MD文件中起始描述部分，可是设置每个文章的详细信息，如title，categories，tags，permalink，date，updated，comments等信息 title 设置blog（文章）标题 date 设置blog的建立时间 updated 设置blog的更新时间 description 设置文章摘要信息，用于主页显示文章在主页的展示。当不设置时，主页显示文章的前几行内容。 password: 设置博文加密 top: 置顶 categories 设置文章的分类，可以使用多级分类，形式如下： 123categories: (这里有空格)- 目录一- 目录二 tags 设置文章的标签，可以设置多个，设置方法有如下两种： 1234567方法1tags: - 标签1- 标签2方法二tags: [标签1，标签2] 在主页中添加自定义页面例如，添加“读书”页面 1hexo new page &quot;读书&quot; 此时会在hexo &gt; source文件夹中会生成一个读书的文件夹。修改文件夹下index.md文件,内容如下：123456---title: 读书date: 2018-12-11 15:34:55type: &quot;读书&quot;comments: false # 当需要关闭评论时，添加comments并将值设置为false--- 然后编辑主题的_config.yml，在menu中的添加读书: /读书。注意是在当前使用的主题，假如用的是Next，则修改./themes/next/_config.yml。最终内容如下:123456789101112menu: home: / # 在菜单上显示首页 archives: /archives # 在菜单删显示全部 categories: /categories # 在菜单上显示 分类 tags: /tags # 在菜单上显示 标签 读书: /读书 about: /about # 在菜单上显示 关于 以上位置，表示最终blog中各个页面的位置，可以根据需要调整。 文章置顶在文章中设置置顶标签，并且实现文章置顶。 1.修改仓库1234$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save` 添加置顶标志 修改主题设置文件。例如使用Next主题，可打开并修改/blog/themes/next/layout/_macro目录下的post.swig文件。找到&lt;div class=&quot;post-meta&quot;&gt;标签，在其后方插入如下代码：12345&#123;% if post.top %&#125; &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&#123;% endif %&#125; 在Front-Matter中添加top标签当标签为top: true时，设置该文章置顶，多个置顶文章时，按照时间排序当标签为top: 11时，该文章也会置顶，并且会按照设置的数值进行排序，数值越打越靠前 另一种置顶设置方法，见解决Hexo博客文章置顶问题 添加背景图片 下载喜欢的背景图片，放置于\source\uploads\images文件夹下，并命名backGround.jpg（名字随意取，但是需要与下面代码一致），如果没有该文件夹，请手动创建 一般建议将相关文件都放置在\source文件夹下 在\themes\next\source\css\_custom\custom.styl文件中添加以下代码1body &#123; background:url(/uploads/images/backGround.jpg);&#125; 文章加密 修改themes\next\layout\_partials\head.swig文件，在后添加以下代码： 1234567891011121314&lt;script&gt; (function () &#123; if (&apos;&#123;&#123; page.password &#125;&#125;&apos;) &#123; if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;) &#123; // 这里可以自定义 alert(&apos;密码错误！&apos;); // 这里可以自定义 if (history.length === 2) &#123; location.replace(&quot;https://xxxxxxxxxxxxxxxxxxxxxx/&quot;); // 这里替换成你的首页 &#125; else &#123; history.back(); &#125; &#125; &#125; &#125;)();&lt;/script&gt; 在你想要加密的文章的front-matter中添加password: （你的文章密码） 相关网址github blog搭建教程图标网址hexo博客优化之文章置顶+置顶标签Hexo-Next-主题优化打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化]]></content>
      <categories>
        <category>教程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
